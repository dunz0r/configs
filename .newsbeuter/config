####################################
# newsbeuter example configuration #
####################################

## configuration option: always-display-description
## description: If true, then the description will always displayed even if e.g. a content:encoded tag has been found.
## parameter syntax: [true/false]
# always-display-description false

## configuration option: article-sort-order
## description: The sortfield specifies which article property shall be used for sorting (currently available: date, title, flags, author, link, guid). The optional direction specifies the sort direction ("asc" specifies ascending sorting, "desc" specifies descending sorting. for date, "desc" is default, for all others, "asc" is default).
## parameter syntax: <sortfield>[-<direction>]
 article-sort-order date

## configuration option: articlelist-format
## description: This variable defines the format of entries in the article list. See below for more information on format strings.
## parameter syntax: <format>
 articlelist-format "%4i %f %D   %?T?|%-17T|  ?%t"

## configuration option: auto-reload
## description: If enabled, all feeds will be automatically reloaded at start up and then continuously after a certain time has passed (see reload-time).
## parameter syntax: [yes/no]
# auto-reload no

## configuration option: bookmark-cmd
## description: If set, the configured command will be used as bookmark plugin. Please refer to the documentation for further information on bookmark plugins.
## parameter syntax: <command>
# bookmark-cmd ""

## configuration option: bloglines-auth
## description: Set the Bloglines username and password. This is necessary for the Bloglines synchronization mode.
## parameter syntax: <login>:<password>
# bloglines-auth ""

## configuration option: bloglines-mark-read
## description: If set to yes, it will mark all articles that are downloaded from Bloglines as read.
## parameter syntax: [yes/no]
# bloglines-mark-read no

## configuration option: bookmark-cmd
## description: If set, then <bookmark-command> will be used as bookmarking plugin. See the documentation on bookmarking for further information.
## parameter syntax: <bookmark-command>
# bookmark-cmd ""

## configuration option: browser
## description: Set the browser command to use when opening an article in the browser. If <browser-command> contains %u, it will be used as complete commandline and %u will be replaced with the URL that shall be opened.
## parameter syntax: <browser-command>
 browser luakit --uri %u &> /dev/null &

## configuration option: cache-file
## description: This configuration option sets the cache file. This is especially useful if the filesystem of your home directory doesn't support proper locking (e.g. NFS).
## parameter syntax: <path>
# cache-file "~/.newsbeuter/cache.db"

## configuration option: cleanup-on-quit
## description: If yes, then the cache gets locked and superfluous feeds and items are removed, such as feeds that can't be found in the urls configuration file anymore.
## parameter syntax: [yes/no]
# cleanup-on-quit yes

## configuration option: confirm-exit
## description: If set to yes, then newsbeuter will ask for confirmation whether the user really wants to quit newsbeuter.
## parameter syntax: [yes/no]
# confirm-exit no

## configuration option: datetime-format
## description: This format specifies the date/time format in the article list. For a detailed documentation on the allowed formats, consult the manpage of strftime(3).
## parameter syntax: <date/time format>
# datetime-format %b %d

## configuration option: display-article-progress
## description: If set to yes, then a read progress (in percent) is displayed in the article view. Otherwise, no read progress is displayed.
## parameter syntax: [yes/no]
# display-article-progress yes

## configuration option: error-log
## description: If set, then user errors (e.g. errors regarding defunct RSS feeds) will be logged to this file.
## parameter syntax: <path>
# error-log ""

## configuration option: feedlist-format
## description: This variable defines the format of entries in the feed list. See below for more information on format strings.
## parameter syntax: <format>
# feedlist-format "%4i %n %11u %t"

## configuration option: goto-next-feed
## description: If set to yes, then the next-unread and prev-unread keys will search in other feeds for unread articles if all articles in the current feed are read. If set to no, then the next-unread and prev-unread keys will stop in the current feed.
## parameter syntax: [yes/no]
# goto-next-feed yes

## configuration option: html-renderer
## description: If set to "internal", then the internal HTML renderer will be used. Otherwise, the specified command will be executed, the HTML to be rendered will be written to the command's stdin, and the program's output will be displayed. This makes it possible to use other, external programs, such as w3m, links or lynx, to render HTML.
## parameter syntax: <path>
# html-renderer internal

## configuration option: max-items
## description: Set the number of articles to maximally keep per feed. If the number is set to 0, then all articles are kept.
## parameter syntax: <number>
# max-items 0

## configuration option: notify-format
## description: Format string that is used for formatting notifications. See the chapter on format strings for more information.
## parameter syntax: <string>
notify-format "::newsbeuter::" "newsbeuter: finished reload, %f unread feeds (%n unread articles total)"

## configuration option: notify-program
## description: If set, then the configured program will be executed if new articles arrived (through a reload). The first parameter of the called program contains the notification message.
## parameter syntax: <path>
notify-program "notify-send --icon /usr/share/awesome/icons/awesome48.png"

## configuration option: notify-screen
## description: If yes, then a "privacy message" will be sent to the terminal, containing a notification message about new articles. This is especially useful if you use terminal emulations such as GNU screen which implement privacy messages.
## parameter syntax: [yes/no]
notify-screen yes

## configuration option: notify-xterm
## description: If yes, then the xterm window title will be set to a notification message about new articles.
## parameter syntax: [yes/no]
 notify-xterm yes

## configuration option: notify-beep
## description: If yes, then the speaker beep on new articles.
## parameter syntax: [yes/no]
# notify-beep no

## configuration option: podcast-auto-enqueue
## description: If yes, then all podcast URLs that are found in articles are added to the podcast download queue. See below for more information on podcast support in newsbeuter.
## parameter syntax: [yes/no]
# podcast-auto-enqueue no

## configuration option: opml-url
## description: If the OPML online subscription mode is enabled, then the list of feeds will be taken from the OPML file found on this location.
## parameter syntax: <url>
# opml-url ""

## configuration option: refresh-on-startup
## description: If yes, then all feeds will be reloaded when newsbeuter starts up. This is equivalent to the -r commandline option.
## parameter syntax: [yes/no]
 refresh-on-startup yes

## configuration option: reload-only-visible-feeds
## description: If yes, then manually reloading all feeds will only reload the currently visible feeds, e.g. if a filter or a tag is set.
## parameter syntax: [yes/no]
# reload-only-visible-feeds no

## configuration option: reload-time
## description: The number of minutes between automatic reloads.
## parameter syntax: <number>
# reload-time 60

## configuration option: save-path
## description: The default path where articles shall be saved to. If an invalid path is specified, the current directory is used.
## parameter syntax: <path>
# save-path ~/

## configuration option: show-keymap-hint
## description: If no, then the keymap hints on the bottom of screen will not be displayed.
## parameter syntax: [yes/no]
# show-keymap-hint yes

## configuration option: show-read-feeds
## description: If yes, then all feeds, including those without unread articles, are listed. If no, then only feeds with one or more unread articles are list.
## parameter syntax: [yes/no]
# show-read-feeds yes

## configuration option: show-read-articles
## description: If yes, then all articles of a feed are listed in the article list. If no, then only unread articles are listed.
## parameter syntax: [yes/no]
 show-read-articles no

## configuration option: suppress-first-reload
## description: If yes, then the first automatic reload will be suppressed if auto-reload is set to yes.
## parameter syntax: [yes/no]
# suppress-first-reload no

## configuration option: text-width
## description: If set to a number greater than 0, then all HTML will be rendered to this maximum line length. If set to 0, the terminal width will be used.
## parameter syntax: <number>
# text-width 0

## configuration option: urls-source
## description: This configuration command sets the source where URLs shall be retrieved from. By default, this is ~/.newsbeuter/urls. Alternatively, you can set it to "bloglines", which enables newsbeuter's Bloglines synchronization mode, or to "opml", which enables newsbeuter's OPML online subscription mode.
## parameter syntax: <source>
# urls-source "local"

## configuration option: use-proxy
## description: If yes, then the configured proxy will be used for downloading the RSS feeds.
## parameter syntax: [yes/no]
# use-proxy no

## configuration option: user-agent
## description: If set to a non-zero-length string, this value will be used as HTTP User-Agent header for all HTTP requests.
## parameter syntax: <user agent string>
# user-agent ""

# EOF
